Generics:
---------

1)Generics are the angle brackets "<>" which is used to implement type parameter.Generics provide compile time safety by enabling the specification of th data type of objects that a class or method can work with.

2)Benefits of generics are:
	1.type safety
	2.code reusability
	3.better readability
	4.improved performance

3)A generic class in java is used to work eith different datatypes.It is defined in  angle brackets "<>" which represents the data being used.

4)type parameter is a placeholder for the type of data that is used.It is defined in single upper case letter enclosed in angle brackets.

5)generic method in java is a method that can work with different datatypes.It is enclosed in angle bracket "<>" which shows the type of data.

6)ArrayList can store any type of element bur ArrayList<T> can store only the specified data type.



IO & file Handling:
-------------------

1)A stream can be defined as the sequence of data.The InputStream is used to read the data and output stream is used to write the data. 

2)Method of outputStream are:
->write()
->write(byte[] array)
->close()
->flush()

3)Serialization is the process of crushing the data into byte pieces so that the file can ensure security.it can also reffered as coverting the object into a stream of bytes .It is implemeted using the serializable interface.

4)Serializable interface is the marker interface which has no methods.The functionality of this interface is done by JVM in runtime.

5)Deserialization is the process converting the stream of bytes to object.This can only done after an object is serialized.

6)Serialization is achieved in java using the serializable interface which is marker interface and does not have any methods.when an object is serialized the objects is converted into the stream of bytes which is transferred to a file or network or database. 

7)Deserialization is achieved only after an object is serialized ,the stream of bytes converted into an object instance.this is done by calling readObject() method or readLine()method in ObjectInputStream.

8)using the transient or static keyword we can avoid certain member variables of class from getting serialize.

9)
FileReader
FileWriter
FileInputStream
ObjectInputStream
FileOutputStream
ObjectOutputStream
PrintWriter
BufferedWriter
.....etc

10)
Serilizable interface is marker interface.
Serializable interface has no methods.
Serialization is done by JVM internally after implementing serializable interface.

Externalizable interface is not a marker interface.
Externalizable interface has methods like WriteExternal and readExternal.
Externalizatio is done externally by us using write internal and read internal methods.


