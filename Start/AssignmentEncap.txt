Static keywordAsg Ques
----------------------

1)The static keyword in java is used for memeory management mainly.We can aplly static keyword to variables,methods,blocks and nested classes.The static keybword belongs to the class than the instance of the class.
	The static can be:
		1.variables
		2.methods
		3.nested classes
		4.blocks.

2)class loading is the process of loading the class filesinto the JVM at runtime.the class loading on java is divided into 3 phases :loading ,linking ,initialization.
Loading:In this phases the class loader locates the class file using the fully qualified class name,reads the class file and converts it into vlass object.the class object contains the metadata of the class ,such as fields ,methods and constructors.
Linking: In the linking phase, the JVM perform several operation on the Class object, such as
verifying the class file's integrity, resolving symbolic references, and allocating memory for the class variable.
Initialization: In the initialization phase, the JVM initialize the class variables with their default value, and run the class's tatic initialization block (if any).

3)No,we cannot mark a local varaible as static.

4)A static method is also called a class method because it ties to a class rather than an individual instance of a class.We nedd not to create an object to call and execute a static method.

5)when the dot class file is loaded into memory,a static block is executed.After executing static block,JVM calls main method to start execution.so static block is executed before the main method.

6)The static keyword in java is used for memory management.static members can be accessed without having to create an instance of the class.

7)A static variable is also called a class variable whereas an instance variable is also called a non static variable.
Class variable is always resolved during compile time whereas,instance variable is resolved during the runtime.

8)Static:
 --------
->the static variables are called as class variables.
->these variables get memory in method area.
->If the value does not chnage from object to object then we need to use static variables.

  Non Static: 
  -----------
->the non static members are called as instance variables.
->these variables get memory in heap area.
->If the value changes for object to object then we use Non-static variables.


practical Assignment questions:
-------------------------------


1)
public class Assignmentenc 
{
    private static int count =0;
    public Assignmentenc()
    {
        count++;
    }
    public static int getInstanceCount()
    {
        return count;
    }
    public static void main(String[] args) 
    {
        Assignmentenc a1 = new Assignmentenc();
        Assignmentenc a2 = new Assignmentenc();
        Assignmentenc a3 = new Assignmentenc();
        
        System.out.println("Number of instances Created"+Assignmentenc.getInstanceCount());
    }
}



2)
public class AssignmentEn 
{
    int age;
    String name;
    AssignmentEn(String name,int age)
    {
        this.name=name;
        this.age = age;
    }
    void printname()
    {
        System.out.println("name: "+name+"age: "+age);
    }
    public static void main(String[] args) 
    {
        
        AssignmentEn as = new AssignmentEn("upesh", 25);
        as.printname();    
    }    
}



3)

public class GettersSetters 
{
    private String car_name;
    private int car_number;

    public GettersSetters(String car_name,int car_number)
    {
        this.car_name=car_name;
        this.car_number=car_number;
    }
    public String getName()
    {
        return car_name;
    }
    public int getNumber()
    {
        return car_number;
    }
    public static void main(String[] args) 
    {
        GettersSetters gs = new GettersSetters("Suzuki", 8888);
        System.out.println(gs.getName());
        System.out.println(gs.getNumber());
        System.out.println(gs.getClass());    
    }
}



4)
public class AssignmentEn 
{
    public static void main(String[] args) 
    {
        String s;
        s ="upesh Jinde";

        printname(s);
    }
    static void printname(String name)
    {
        System.out.println("My name is :"+name);
    }
}
//Using static keyword in the method name we can call a method without creating an object of the class.


5)


import java.util.stream.Stream;

public class StaticBlock {

	public String name;
	public int age;

	public StaticBlock() {
		System.out.println("No arg constructor");
	}

	public StaticBlock(int age) {
		super();
		this.age = age;
	}

	public StaticBlock(String name) {
		super();
		this.name = name;
	}

	public StaticBlock(String name, int age) {
		super();
		this.name = name;
		this.age = age;
	}

	@Override
	public String toString() {
		return "StaticBlock [name=" + name + ", age=" + age + "]";
	}

	static {
		System.out.println("Static block");
	}

	public static void main(String[] args) {
		StaticBlock block = new StaticBlock(20);
		System.out.println(block.age);
		StaticBlock block2 = new StaticBlock("Kohli");
		System.out.println(block2.name);
		StaticBlock block3 = new StaticBlock("Mahi", 30);
		System.out.println(block3.toString());
	}
}


Encapsulation Assignment Questions:
-----------------------------------
1)The process of binding the data and methods together into a single unit is known as Encapsulation.If a variable or filed is declared as private in the class then it cannot be accessed by anyone outside the class and hides the fields within the class.So,it is called as data hiding.

2)The important features of the Encapsulation are:
	1.Data abstraction
	2.Data Hiding
	3.Access Control
	4.Data integrity

3)Getter and setter method in java is used to acess and modify the private data members of a class.They provide a layer of abstraction that allows us to contro the access of the data.

public class GettersSetters 
{
    private String car_name;
    private int car_number;

    public GettersSetters(String car_name,int car_number)
    {
        this.car_name=car_name;
        this.car_number=car_number;
    }
    public String getName()
    {
        return car_name;
    }
    public int getNumber()
    {
        return car_number;
    }
    public static void main(String[] args) 
    {
        GettersSetters gs = new GettersSetters("Suzuki", 8888);
        System.out.println(gs.getName());
        System.out.println(gs.getNumber());
        System.out.println(gs.getClass());    
    }
}


4)This keyword is used to refer the current object or instnace of a class.It is used to differentiate between instnaces variables and parameters or local variables that have he same name , and to pass the current object as aparameter to other methods or constrcutors.

5)Advantages of encapsulation:
 ->The encapsulated code is more readable and easy to change.
 ->It improves maintainabilty of the software.
 ->It prevents other classes from accessing the private fields.
 ->It helps to achieve security.

6)Encapsulation is achieved in java by declaring the instance variables of the class as private, and providing public getter and setter methods to access and modify the values of these variables.We can also control the access and the data.


Constructor Assignment Questions:
---------------------------------
1)Constructor is used to create an instance of a class.It is same as method except two things ,it doesn't have any return type and the constructor name is same as class name.
When we create an object a default constructor is created and called.

2)Constructor chaining is the process of calling one constructor from another constructor with respect to object.It is used to avoid Duplicate codes.

3)No,we cannot call a subclass constructr using superclass constructor.

4)The compiler will give warning ,if a constructor has a return type then it becomes a method and the compiler will give warning as the method name is like constructor name.

5)No-arg constrctor means the constrcutor which doesn't have any arguments.Default constructor is also called no arg constructor.

6)The default constructor is invoked automatically when we create an instance of the class.no-arg constructor means the the constructor which doesnot have any arguments.

7)If we want to have different ways of initializing an object using a different number of parameters then we must use constructor overloading.

8)The compiler will generate any default constructor, if we we dont have any constructors.
if we declare a constrcutor then it wont generate the deafult constructor.For every class the constructor concept is applicable.





















